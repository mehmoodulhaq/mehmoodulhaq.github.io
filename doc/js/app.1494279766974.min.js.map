{"version":3,"sources":["redux.module.js","app.js","templates.js","app.controller.js","dashboard.controller.js","delete-landing-page.directive.js","store.service.js","spotify.service.js"],"names":["Redux","CreateStore","_reducer","_state","middleWare","state","postMw","preMw","thunk","reducer","subscription","eventSubscription","forEach","obj","push","store","enablePostMiddleWare","enablePreMiddleWare","lastState","toggleLastState","prototype","constructor","emit","eventname","event","fn","evtName","type","data","dispatch","_action","noSubscribeFlag","action","JSON","parse","stringify","self","this","Object","assign","getState","localStorage","setItem","stateChangeflag","fnNameIState","_name","compare","filter","on","all","map","_fn","i","arr","splice","subscribe","name","comparaterFn","unSubAll","togglePostMiddleware","flag","togglePreMiddleware","enableLastState","val","setInStorage","enableStorage","combineReducer","config","accuState","keys","key","configFlag","errFlag","Function","alreadyUndefined","undefined","Error","createStore","initialState","fresh","educer","registerThunk","undoRedoMetaReducer","reducerfn","_length","useLocalStorage","setLocal","reducerfnName","_state_","length","redo","undo","getItem","newState","pop","clear","setTimeout","is","clearTimeout","slice","$inject","angular","module","factory","$stateProvider","$urlRouterProvider","otherwise","url","templateUrl","controller","element","document","ready","bootstrap","run","$templateCache","put","AppController","$scope","$rootScope","DashboardController","spotify","toggleModal","modals","comparePageCards","curr","last","Array","isArray","parseData","card","prop","hasOwnProperty","concat","searchText","cardsMetadata","loading","pageCards","artist","albumTemplate","album","tracksTemplate","selectedCard","showLoading","albumsArray","tracksArray","audio","lastTrackUrl","play","openModal","albums","items","tracks","status","getAlbums","getTracks","goBack","closeModal","more","promise","_self","next","then","$$phase","$digest","payload","catch","e","getMoreAlbums","validateGetMore","slectAlbum","preStatus","pause","togglePlay","Audio","offset","limit","total","prev","toggleBtnState","pre","searchArtists","showMore","getCardByStatus","getIcon","background-image","getCardStatusIcon","trustAsResourceUrl","$sce","DeleteLandingPageAfterBootstrap","link","scope","attrs","children","eq","fadeOut","remove","restrict","NgEnter","bind","which","$apply","$eval","ngEnter","preventDefault","MyNgInclude","ele","myNgInclude","ResponsiveImageIsolated","respImage","select","_images","band","getViewport","images","defaultImage","ChangeImage","load","indexOf","img","Image","src","onload","animate","opacity","height","$","css","_url","replace","$watch","old","vp","nanoScroller","$timeout","elem","ctrl","tim","preventPageScrolling","$on","cancel","btnPress","click","trigger","off","directive","Store","redux","$window","pageCardsReducer","id","cardId","albumsMetadata","cardsMetadataReducer","artists","loadingReducer","viewportReducer","w","innerWidth","h","innerHeight","d_bp","m_bp","combinedReducer","rootReducer","appInitialState","actions","toggleLoadoing","addPageCards","getArtists","spPayload","getMoreArtists","local","viewport","wait","window","Spotify","q","$http","get","baseUrl","p","params","encodeURI","trim","method"],"mappings":"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","file":"app.1494279766974.min.js","sourcesContent":["(function() {\n    'use strict';\n    Redux.$inject = [];\n\n    function Redux() { // use .pipe(uglify({mangle: { keep_fnames: true} })) for uglify\n        var store;\n        var postMw, preMw, thunk, reducer, enablePostMiddleWare, enablePreMiddleWare, eventSubscription,\n            subscription, lastState, state;\n        var toggleLastState = true;\n\n        /**\n         * \n         * @param {Function} reducer \n         * @param {Object} state \n         * @param {Array[Ojbect]} middleWare\n         * @return {Function} \n         *  \n         */\n        function CreateStore(_reducer, _state, middleWare) { // middleware.type == 'post' ,middleware.type == 'pre' \n            var self = this;\n            // debugger\n            state = _state || {};\n            postMw = [];\n            preMw = []\n            thunk = thunk || {};\n            reducer = _reducer;\n            subscription = [];\n            eventSubscription = [];\n\n            (middleWare || []).forEach(function(obj) {\n                if (typeof obj['post'] === 'function') postMw.push(obj['post']);\n                if (typeof obj['pre'] === 'function') postMw.push(obj['pre']);\n            })\n\n        };\n        CreateStore.prototype = {\n\n            constructor: CreateStore,\n            emit: function(eventname, event) {\n                eventSubscription.forEach(function(fn) {\n                    if (fn.evtName === eventname) {\n\n                        fn({ type: eventname, data: event })\n                    }\n                })\n            },\n            dispatch: function(_action, noSubscribeFlag) {\n\n                var action = JSON.parse(JSON.stringify(_action)) // preserve action mutation in sub reducers\n\n                var self = this;\n                lastState = Object.assign({}, state)\n                if (action.type in thunk) {\n                    // thunk will call dispatch in turn or do nothing;\n                    thunk[action.type](action, self);\n\n                } else {\n                    // preMiddleware\n                    if (enablePreMiddleWare) {\n                        (preMw || []).forEach(function(fn) {\n                            state = Object.assign({}, state, preMw(action, self.getState));\n                        });\n                    }\n\n                    // do reducing\n\n                    state = Object.assign({}, state, reducer(state, action, self.getState));\n\n                    // post middle ware\n                    if (enablePostMiddleWare) {\n                        (preMw || []).forEach(function(fn) {\n                            // avoide mutation;\n\n                            state = Object.assign({}, state, preMw(action, self.getState))\n                        });\n                    }\n\n                    // cache store\n                    localStorage.setItem('state', JSON.stringify(state));\n\n                    // all done ; notify subscribers;\n                    if (!noSubscribeFlag) { // noSubscribeFlag true means silent update only\n                        (subscription || []).forEach(function(fn) {\n                            var stateChangeflag = false;\n                            var fnNameIState = fn._name && fn._name in state;\n                            if (typeof fn.compare === 'function') {\n                                // subscriber hastoggleLastState registered a comparator function\n                                if (fnNameIState) {\n                                    stateChangeflag = fn.compare(state[fn._name], lastState[fn._name])\n\n                                } else {\n                                    stateChangeflag = fn.compare(state, lastState)\n                                }\n                                if (typeof stateChangeflag === 'boolean' && stateChangeflag) {\n                                    if (fnNameIState) {\n                                        if (toggleLastState) {\n                                            fn(state[fn._name], lastState[fn._name]);\n                                        } else {\n                                            fn(state[fn._name])\n                                        }\n\n                                    } else {\n                                        if (toggleLastState) {\n                                            fn(state, lastState)\n                                        } else {\n                                            fn(state)\n                                        }\n\n                                    }\n                                }\n\n                            } else {\n                                if (fnNameIState) {\n                                    fn(state[fn._name], lastState[fn._name]);\n\n                                } else {\n                                    // dont send last state for full state\n                                    fn(state)\n                                }\n                            }\n\n                        })\n                    }\n\n\n                }\n                lastState = null;\n            },\n            getState: function(filter) {\n                if (filter && typeof filter === 'function') return filter(state);\n                return state;\n            },\n            on: function(evtName, fn) {\n                fn.evtName = evtName\n                eventSubscription.push(fn);\n                return function off(all) {\n                    if (all) {\n                        eventSubscription = null;\n                        eventSubscription = [];\n                    }\n                    eventSubscription.map(function(_fn, i, arr) {\n                        if (_fn === fn) arr.splice(i, 1);\n                    })\n                }\n            },\n\n            subscribe: function(name, fn, comparaterFn) {\n                var self = this;\n                fn.compare = comparaterFn;\n                fn._name = name;\n                subscription.push(fn);\n                // provide the current state;\n                // fn(state, state[fn._name] || state);\n                if (typeof comparaterFn === 'function') {\n                    if (comparaterFn(state[fn._name] || state, state[fn._name] || state)) {\n                        fn(state[fn._name] || state, state[fn._name] || state);\n                    } //else remain silent\n\n                } else {\n\n                    fn(state[fn._name] || state, state[fn._name] || state);\n                }\n\n                return function(all) {\n                    if (all) {\n                        subscription = null;\n                        subscription = [];\n                    }\n                    subscription.map(function(_fn, i, arr) {\n                        if (_fn === fn) arr.splice(i, 1);\n                    })\n                }\n            },\n            unSubAll: function() {\n                this.subscription = null;\n                this.subscription = [];\n            },\n            togglePostMiddleware: function(flag) {\n                enablePostMiddleWare = flag;\n            },\n            togglePreMiddleware: function(flag) {\n                enablePreMiddleWare = flag;\n            },\n            enableLastState: function(val) {\n                toggleLastState = typeof val === 'boolean' ? val : false;\n            },\n            setInStorage: function(val) {\n                enableStorage = typeof val === 'boolean' ? val : true;\n            }\n\n\n        }\n\n        var combineReducer = function(config) {\n            // now optionally we can alter state in the reducers and var combineReducer be the\n            // only pure function.\n            return function(state, action) {\n\n                var accuState = Object.assign({}, state);\n\n                Object.keys(config).forEach(function(key) {\n                    var reducer;\n                    var configFlag = false;\n                    var errFlag = false;\n\n                    if (config[key] instanceof Function) {\n\n                        reducer = config[key]\n                            // reducer._name = key;\n                    } else {\n                        configFlag = true;\n                        reducer = config[key].reducer\n                            // config[key].reducer._name = key;\n                    }\n                    var alreadyUndefined;\n                    if (configFlag) {\n                        alreadyUndefined = typeof accuState === 'undefined';\n                        accuState = reducer(accuState, action);\n                        errFlag = accuState === undefined;\n                    } else {\n                        alreadyUndefined = typeof accuState[key] === 'undefined';\n                        accuState[key] = reducer(accuState[key], action);\n                        errFlag = accuState[key] === undefined\n                    }\n\n                    if (errFlag && errFlag !== alreadyUndefined) {\n                        throw new Error(reducer.name + '-Reducer returned undefined')\n                    }\n                });\n\n                return accuState;\n            }\n        }\n\n        var createStore = function(reducer, initialState, middleWare, fresh) {\n\n            if (fresh) {\n                return new CreateStore(educer, initialState, middleWare);\n            }\n            // enable singvaron store\n            if (store) return store;\n            store = new CreateStore(reducer, initialState, middleWare);\n            return store;\n\n        }\n        var registerThunk = function(data) {\n            thunk = thunk || {};\n            if (typeof data === 'object') {\n                Object.assign(thunk, data);\n            } else {\n                if (typeof data === 'function' && data.name) thunk[data.name] = data;\n            }\n        }\n\n        var undoRedoMetaReducer = function(reducerfn, _length, useLocalStorage) {\n\n            // due to uglify proble\n            var length = _length || 10;\n            var current;\n            var redo = [];\n            var undo = [];\n\n            var _state_ = {\n                redo: [],\n                undo: []\n            }\n            if (useLocalStorage) {\n                _state_ = getLocal();\n            }\n            var newState;\n            var reducerfnName = reducerfn._name || reducerfn.name\n\n            function getLocal() {\n                return JSON.parse(localStorage.getItem(reducerfnName) || \"{redo:[],undo:[]}\");\n\n            }\n\n            function setLocal() {\n                localStorage.setItem(reducerfnName, JSON.stringify(_state_))\n            }\n            return function(state, action) {\n                if (action.type === reducerfnName + '-undo') {\n                    newState = undo.length ? undo.pop() : state;\n                    var clear = setTimeout(function() {\n                        if (!Object.is(state, newState)) {\n                            if (typeof state !== 'undefined') {\n                                _state_.redo.push(state);\n                                if (useLocalStorage) {\n                                    setLocal();\n                                }\n\n                                // if (redo.length > length) {\n                                //     redo = redo.slice(length * (-1))\n                                // }\n                            }\n\n                        }\n                        clearTimeout(clear);\n                    }, 10)\n\n                } else if (action.type === reducerfnName + '-redo') {\n                    newState = redo.length ? redo.pop() : state;\n                    var clear = setTimeout(function() {\n                        if (!Object.is(state, newState)) {\n                            if (typeof state !== 'undefined') {\n                                _state_.undo.push(state)\n                                if (useLocalStorage) {\n                                    setLocal();\n                                }\n                                // if (undo.length > length) {\n                                //     undo = undo.slice(length * (-1))\n                                // }\n                            }\n                        }\n                        clearTimeout(clear);\n                    }, 10)\n                } else {\n                    newState = reducerfn(state, action);\n                    var clear = setTimeout(function() {\n                        if (!Object.is(state, newState)) {\n                            if (typeof state !== 'undefined') {\n                                _state_.undo.push(state)\n                                if (_state_.undo.length > length) {\n                                    _state_.undo = _state_.undo.slice(length * (-1))\n                                }\n                                _state_.redo = [];\n                                if (useLocalStorage) {\n                                    setLocal();\n                                }\n                            }\n                        }\n                        clearTimeout(clear);\n                    }, 10)\n                }\n                return newState;\n\n                function mutate(val) {\n                    if (typeof val === 'object') {\n                        return Object.assign({}, val)\n                    } else if (Array.isArray(state)) {\n                        return val = val.concat(val)\n                    }\n                    return val\n                }\n\n            }\n        }\n\n\n        return {\n            createStore: createStore,\n            combineReducer: combineReducer,\n            registerThunk: registerThunk,\n            undoRedoMetaReducer: undoRedoMetaReducer\n        }\n    };\n    angular.module('redux.module', []).factory('redux', Redux);\n})()","(function() {\n    'use strict';\n    // main module\n    angular.module('dashboard', [\n            'ui.router', 'ngAnimate', 'redux.module'\n        ])\n        // start and load the angular and us dashboard as root module\n\n    angular.element(document).ready(function() {\n\n        /*\n         * Intentionally using setTimeout to show the first loading page\n         */\n\n        angular.bootstrap(document, ['dashboard'], {\n\n        });\n\n    });\n\n    config.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n    function config($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise('/');\n        $stateProvider\n            .state('dashboard', {\n                url: '/',\n                templateUrl: '../app/templates/dashboard_layout.html',\n                controller: 'dashboardController as Ctrl'\n            })\n\n\n    }\n    angular.module('dashboard').config(config);\n\n})();","angular.module('dashboard').run(['$templateCache', function($templateCache) {$templateCache.put('app/templates/album.modal.tpl.html','<div class=\"mus-album-modal-parent\" ng-init=\"Ctrl = $parent.Ctrl\">\\n    <div class=\"modal-wraper\">\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"top-image-area\">\\n\\n                    <!--resp-image is a directive to select a responsive image among three-->\\n                    <div class=\"image-wraper\">\\n                        <div class=\"image\" resp-image=\"Ctrl.modals.selectedCard\"></div>\\n                    </div>\\n                    <div class=\"overlay\"></div>\\n                    <div class=\"close\" ng-click=\"Ctrl.modals.closeModal(Ctrl.modals.selectedCard.status)\"></div>\\n                    <div ng-if=\"Ctrl.modals.showLoading && !Ctrl.modals.dataArray.lenght\" class=\"loader-ring\"></div>\\n                    <div class=\"text-wraper\">\\n                        <div class=\"album-heading-mobile\">Albums by</div>\\n                        <div class=\"text\">{{Ctrl.modals.selectedCard.name}}</div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"header-text\">{{Ctrl.modals.selectedCard.name ||\\'Albums\\'}}</div>\\n                <div class=\"line\"></div>\\n                <div class=\"mus-more-albums\">\\n\\n                    <fieldset class=\"input-wraper\" ng-disabled=\"Ctrl.modals.validateGetMore(\\'albums\\')\">\\n                        <input type=\"button\" value=\". . .\" ng-click=\"Ctrl.modals.getMoreAlbums();\">\\n                    </fieldset>\\n                    <div class=\"count\">\\n                        <span>{{Ctrl.modals.selectedCard.albums.next? Ctrl.modals.selectedCard.albums.offset +Ctrl.modals.selectedCard.albums.limit :Ctrl.modals.selectedCard.albums.total}}</span>/<span>{{Ctrl.modals.selectedCard.albums.total}}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"albums\">\\n                    <!--nano-scroll is a directive for shaping scroll bar-->\\n                    <div class=\"nano\">\\n                        <div class=\"nano-content\">\\n                            <div class=\"album\" ng-click=\"Ctrl.modals.slectAlbum(album)\" ng-repeat=\"album in Ctrl.modals.albumsArray track by $index\" nano-scroller>\\n\\n                                <div class=\"image-wraper\">\\n                                    <div class=\"image\" resp-image=\"album\"></div>\\n                                    <div class=\"overlay\"></div>\\n                                </div>\\n                                <div class=\"text-area\">\\n                                    <div class=\"album-name\">{{album.name}}</div>\\n                                    <div class=\"album-year\">{{album.album_type ||\\'Oops! Not Known \\' }}</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>');\n$templateCache.put('app/templates/dashboard_content.tpl.html','<div class=\"container-fluid mus-content-parent\">\\n    <div class=\"row\">\\n        <div class=\"col-xs-12 col-md-12 mus-cards-panel-wrapper\">\\n            <div ng-if=\"!!Ctrl.pageCards.length\" class=\"mus-cards-panel\">\\n                <div class=\"mus-cards\" ng-repeat=\"card  in Ctrl.pageCards track by $index\" ng-click=\"Ctrl.modals.openModal(card)\">\\n                    <div class=\" center-image\" resp-image=\"Ctrl.getCardByStatus(card)\"></div>\\n                    <div class=\"center-image-overlay\"></div>\\n                    <div class=\"text-wraper\">\\n                        <div class=\"text \">{{Ctrl.getCardByStatus(card).name}}</div>\\n                    </div>\\n\\n                    <div class=\"side-icon\" ng-style=\"Ctrl.getIcon(card)\"></div>\\n                    <div class=\"action-icon \">\\n                        <div ng-if=\"Ctrl.getCardByStatus(card).type == \\'artist\\'\" class=\"text\">view album</div>\\n                        <div ng-if=\"Ctrl.getCardByStatus(card).type == \\'album\\'\" class=\"text\">view Tracks</div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Show me more button-->\\n    <div class=\"row\">\\n        <div class=\"col-xs-12 mus-card-show-more-btn-area\">\\n            <input type=\"button\" ng-if=\"Ctrl.cardsMetadata.next && Ctrl.pageCards.length\" ng-disabled=\"!Ctrl.cardsMetadata.next\" value=\"Show me More!\" ng-click=\"Ctrl.searchArtists(true)\">\\n            <div class=\"count\" ng-if=\"Ctrl.pageCards.length\">\\n                <span>{{Ctrl.cardsMetadata.offset + Ctrl.cardsMetadata.limit <= Ctrl.cardsMetadata.total ? Ctrl.cardsMetadata.offset + Ctrl.cardsMetadata.limit :  Ctrl.cardsMetadata.total}}</span>/<span>{{Ctrl.cardsMetadata.total}}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-if=\"!Ctrl.pageCards.length\" class=\"row\">\\n        <div class=\"col-xs-12 col-md-12 mus-cards-empty hidden-sm-down\">\\n            <div class=\"mus-magnifier\"></div>\\n            <div class=\"text\">Your Results will show here</div>\\n        </div>\\n    </div>\\n\\n</div>');\n$templateCache.put('app/templates/dashboard_footer.tpl.html','<div class=\"container-fluid mus-footer-parent\">\\n    <div class=\"row\">\\n        <div class=\"col-xs-12 col-md-12 mus-footer\">\\n            <div class=\"text-wraper\">\\n                <div class=\"text\">\\n                    Developed by Mehmoodulhaq-Designed by Geek Label\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>');\n$templateCache.put('app/templates/dashboard_header.tpl.html','<div class=\"container-fluid mus-header-parent\">\\n    <div class=\"row\">\\n        <div class=\"col mus-image-area\">\\n            <div class=\"mus-heder-center-image\"></div>\\n            <div class=\"mus-header-arrow\"></div>\\n            <div class=\"mus-header-logo\"></div>\\n            <div class=\"mus-header-powerd-by\">Powered by spotify</div>\\n            <div class=\"count\" ng-if=\"Ctrl.pageCards.length\">\\n                <span ng-if=\"Ctrl.pageCards.length\">{{Ctrl.cardsMetadata.offset + Ctrl.cardsMetadata.limit <= Ctrl.cardsMetadata.total ? Ctrl.cardsMetadata.offset + Ctrl.cardsMetadata.limit :  Ctrl.cardsMetadata.total}}</span>/<span>{{Ctrl.cardsMetadata.total}}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\"row\">\\n        <div class=\"col-sm-12 mus-search-area\" sticky=\".mus-image-area\">\\n\\n            <div class=\"mus-search-bar\">\\n\\n                <!--ng-enter is a directive to detect enter btn press on inputs-->\\n                <input type=\"text\" ng-model=\"Ctrl.searchText\" ng-enter=\"Ctrl.searchArtists($event)\" placeholder=\"Search for artist\">\\n\\n                <!--my-ng-enter is a directive for enter btn detection-->\\n                <div ng-if=\"Ctrl.loading\" class=\"loader-ring\"></div>\\n                <input ng-if=\"Ctrl.toggleBtnState()\" type=\"button\" ng-click=\"Ctrl.searchArtists()\" class=\"hidden-sm-down\" value=\"SEARCH\">\\n                <input ng-if=\"!Ctrl.toggleBtnState()\" type=\"button\" ng-click=\"Ctrl.searchArtists(true)\" class=\"hidden-sm-down\" value=\"MORE\">\\n            </div>\\n            <input ng-if=\"Ctrl.toggleBtnState()\" type=\"button\" class=\"mus-search-button-mob-button hidden-md-up\" ng-click=\"Ctrl.searchArtists();\" value=\"SEARCH\">\\n            <input ng-if=\"!Ctrl.toggleBtnState()\" type=\"button\" class=\"mus-search-button-mob-button hidden-md-up\" ng-click=\"Ctrl.searchArtists(true);\" value=\"SHOW MORE\">\\n            <div ng-if=\"Ctrl.pageCard.lenght\" class=\"count\">\\n                <span>{{Ctrl.cardsMetadata.offset + Ctrl.cardsMetadata.limit}}</span>/<span>{{Ctrl.cardsMetadata.total}}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--https://invis.io/XVAJ2MMK7-->');\n$templateCache.put('../app/templates/dashboard_layout.html','<div class=\"container\">\\n    <!--\"dashboardController as Ctrl\" is present in each ng-include -->\\n    <div class=\"row\">\\n        <div class=\"col px-0\">\\n            <header class=\"row justify-content-center\">\\n                <!--my-ng-include is a directive that eliminates the need of an isolated scope-->\\n                <div class=\"col-xs-12 col-sm-12 col-md-12\" my-ng-include=\"app/templates/dashboard_header.tpl.html\">\\n                    <!--pink landing image and search bar go in this tag-->\\n                </div>\\n            </header>\\n            <section class=\"row\">\\n                <div class=\"col px-0\" my-ng-include=\"app/templates/dashboard_content.tpl.html\">\\n                    <!--Search results will go in this tag-->\\n                </div>\\n                <div class=\"row\"></div>\\n            </section>\\n            <footer class=\"row px-0\">\\n                <div class=\"col-xs-12 col-sm-12\" my-ng-include=\"app/templates/dashboard_footer.tpl.html\">\\n                    <!--Footer information-->\\n                </div>\\n            </footer>\\n        </div>\\n    </div>\\n</div>\\n<!-- view album modal ; opneflag matche card.type-->\\n\\n<div ng-if=\"Ctrl.modals.artist\" ng-include=\"Ctrl.modals.albumTemplate\"></div>\\n<div ng-if=\"Ctrl.modals.album\" ng-include=\"Ctrl.modals.tracksTemplate\"></div>');\n$templateCache.put('app/templates/track.modal.tpl.html','<div class=\"mus-album-modal-parent track-modal\" ng-init=\"Ctrl = $parent.Ctrl\">\\n    <div class=\"modal-wraper\">\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"top-image-area\">\\n                    <!--resp-image is a directive to select a responsive image among three-->\\n                    <div class=\"image-wraper\">\\n                        <div class=\"image\" resp-image=\"Ctrl.getCardByStatus(Ctrl.modals.selectedCard)\"></div>\\n                    </div>\\n                    <div class=\"mus-card-back\" ng-click=\"Ctrl.modals.goBack(\\'album\\')\"></div>\\n                    <div class=\"overlay\"></div>\\n                    <div class=\"close\" ng-click=\"Ctrl.modals.closeModal(Ctrl.modals.selectedCard.status)\"></div>\\n\\n                    <div class=\"loader-ring\" ng-if=\"Ctrl.modals.showLoading && !Ctrl.modals.dataArray.lenght\"></div>\\n                    <div class=\"text-wraper\">\\n                        <div class=\"album-heading-mobile\">Tracks On</div>\\n                        <div class=\"text\">{{Ctrl.getCardByStatus(Ctrl.modals.selectedCard).name}}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"header-text\">{{\\'Tracks\\'}}</div>\\n                <div class=\"line\"></div>\\n                <div class=\"mus-more-albums\">\\n                    <fieldset class=\"input-wraper\" ng-disabled=\"Ctrl.modals.validateGetMore(\\'tracks\\')\">\\n                        <input type=\"button\" ng-click=\"Ctrl.modals.getTracks(Ctrl.modals.selectedCard);\" value=\". . .\">\\n                    </fieldset>\\n                    <div class=\"count\">\\n                        <span>{{Ctrl.modals.selectedCard.tracks.next? Ctrl.modals.selectedCard.tracks.offset + Ctrl.modals.selectedCard.tracks.limit :Ctrl.modals.selectedCard.tracks.total}}</span>/<span>{{Ctrl.modals.selectedCard.tracks.total}}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"row\">\\n            <div class=\"col\">\\n                <div class=\"albums\">\\n                    <div class=\"nano\">\\n                        <div class=\"nano-content\">\\n                            <div class=\"album track\" nano-scroller ng-init=\"selected = false;\" ng-class=\\'{\"selected\":selected}\\' ng-click=\"selected = ! selected; Ctrl.modals.togglePlay(track.preview_url)\" ng-repeat=\"track in Ctrl.modals.tracksArray track by $index\">\\n\\n                                <div class=\"text-area\">\\n                                    <div class=\"album-name\">{{track.name}}</div>\\n                                    <div class=\"album-year\">{{track.duration_ms | date : \\'mm : ss\\' }}</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>');}]);","(function() {\n    'use strict';\n    AppController.$inject = ['$scope', '$rootScope']\n\n    function AppController($scope, $rootScope) {\n        var _this = this;\n    };\n\n    angular.module('dashboard').controller('appController', AppController);\n\n})();","(function() {\n    'use strict';\n    DashboardController.$inject = ['$scope', 'store', 'spotify'];\n\n    function DashboardController($scope, store, spotify) {\n        var self = this;\n        // /**\n        //  * Controller view modals and helper variables\n        //  */\n\n        this.store = store.store;\n        this.searchText;\n        this.cardsMetadata = {};\n        this.loading = false;\n        this.pageCards = [];\n\n        this.modals = {\n            artist: false, // for album ;opneflag matche selectedCard.type\n            albumTemplate: 'app/templates/album.modal.tpl.html',\n            album: false, // for track ;opneflag matche selectedCard.type\n            tracksTemplate: 'app/templates/track.modal.tpl.html',\n            selectedCard: {},\n            showLoading: false,\n            albumsArray: [],\n            tracksArray: [],\n            audio: {\n                lastTrackUrl: '',\n                play: false\n            },\n            openModal: function(card) {\n                var _self = this;\n                this.albumsArray = card.albums && card.albums.items || [];\n                this.tracksArray = card.tracks && card.tracks.items || [];\n                this.selectedCard = card;\n\n                toggleModal(card.status);\n\n                if (card.status === 'artist' && !this.albumsArray.length) {\n                    this.showLoading = true;\n                    this.getAlbums(this.selectedCard)\n                }\n                if (card.status === 'album' && !this.tracksArray.length) {\n                    this.showLoading = true;\n                    this.getTracks(this.selectedCard);\n                }\n\n            },\n            goBack: function(type) {\n                if (type === 'album') {\n                    this.selectedCard.tracks = null;\n                    this.tracksArray = [];\n                    this.selectedCard.status = 'artist'\n                    this.closeModal(type);\n                    this.openModal(this.selectedCard)\n\n                }\n\n            },\n            getAlbums: function(card, more) {\n                var _self = this;\n                var promise;\n                if (card.albums && card.albums.next) {\n                    promise = spotify.getAlbums(card, card.albums.next)\n                } else {\n                    promise = spotify.getAlbums(card)\n                }\n\n                promise\n                    .then(function(data) {\n                        _self.showLoading = false;\n                        $scope.$$phase || $scope.$digest();\n                        if (!card.albums) {\n                            card.albums = data.data;\n                        } else {\n                            card = parseData(card, data.data, 'albums')\n                        }\n                        _self.albumsArray = card.albums.items;\n\n                        self.store.dispatch({ type: \"updateAlbum\", payload: card }, true) // true for silent update\n                    })\n                    .catch(function(e) {\n                        _self.showLoading = false;\n\n                    })\n            },\n            getMoreAlbums: function() {\n                if (this.validateGetMore('albums')) return;\n                if (this.selectedCard.albums.next) {\n                    this.showLoading = true;\n                    this.getAlbums(this.selectedCard);\n                }\n\n            },\n            slectAlbum: function(album) {\n                var preStatus = this.selectedCard.status\n                this.selectedCard.status = 'album'\n                this.selectedCard.album = album;\n                this.closeModal(preStatus)\n                    // $scope.$$phase || $scope.$digest();\n            },\n\n            getTracks: function(card) {\n                if (this.validateGetMore('tracks')) return;\n                this.showLoading = true;\n                var _self = this;\n                var promise;\n                if (card.tracks && card.tracks.next) {\n                    promise = spotify.getTracks(card.album, card.tracks.next)\n                } else {\n                    promise = spotify.getTracks(card.album)\n                }\n                this.loading = false;\n\n                promise\n                    .then(function(data) {\n                        _self.showLoading = false;\n                        if (!card.tracks) {\n                            card.tracks = data.data;\n                        } else {\n                            card = parseData(card, data.data, 'tracks')\n                        }\n                        _self.tracksArray = card.tracks.items;\n\n                        self.store.dispatch({ type: \"updateAlbum\", payload: card }, true) // true for silent update\n                    })\n                    .catch(function(e) {\n                        _self.showLoading = false;\n\n                    })\n\n            },\n\n            closeModal: function(type) {\n                if (this.audio.play) {\n                    this.audio.play = false;\n                    this.audio.audio.pause();\n                }\n                toggleModal(type);\n                self.store.dispatch({ type: 'updateCards', payload: this.selectedCard })\n            },\n            togglePlay: function(url) {\n                if (url !== this.audio.lastTrackUrl) {\n                    if (this.audio.play) {\n                        this.audio.play = false;\n                        this.audio.audio.pause();\n                    }\n                    this.audio.audio = new Audio(url);\n                    this.audio.lastTrackUrl = url;\n                }\n                if (this.audio.play) {\n                    this.audio.audio.pause()\n                    this.audio.play = false;\n                } else {\n                    this.audio.audio.play()\n                    this.audio.play = true;\n                }\n\n            },\n            validateGetMore: function(val) {\n                if (this.selectedCard[val] === null) return;\n                if (!(val in this.selectedCard)) return;\n                return this.selectedCard[val].offset + this.selectedCard[val].limit >= this.selectedCard[val].total\n            }\n\n\n        }\n\n        // /**\n        //  * Subscribe to app various states in this section\n        //  */\n        // if subscribe cb has same name as state.porp the state will be already filtered\n\n        this.store.subscribe('pageCards', function(pageCards, lastState) {\n            self.pageCards = null;\n            self.pageCards = pageCards;\n        }, comparePageCards)\n\n\n        this.store.subscribe('loading', function(state) {\n            self.loading = state;\n        }, function(curr, last) { return curr !== last });\n\n        this.store.subscribe('cardsMetadata', function(state, prev) {\n                self.cardsMetadata = state;\n                if (self.cardsMetadata.searchText) {\n                    self.searchText = self.cardsMetadata.searchText;\n\n                }\n            })\n            // listen to event equal to cb.name\n        this.toggleBtnState = function() {\n            var pre = self.cardsMetadata.searchText === undefined ? \"\" : self.cardsMetadata.searchText\n            return !(self.searchText === pre &&\n                self.cardsMetadata.next)\n        }\n\n        // /**\n        //  *  data search and fetch methods\n        //  */\n        this.searchArtists = function(showMore) {\n\n            // this type exists in tunk so thunk in store will catch it first\n            if (showMore) {\n                self.store.dispatch({ type: 'getMoreArtists' });\n            } else {\n                if (!self.searchText) return;\n                if (self.searchText === self.cardsMetadata.searchText) return;\n                self.store.dispatch({ type: 'getArtists', payload: self.searchText });\n            }\n\n        }\n        this.getCardByStatus = function(card) {\n            if (card.status === \"artist\") return card;\n            if (card.status === \"album\") return card.album;\n        }\n\n\n        // /**\n        //  * View helper methods\n        //  */\n\n        this.getIcon = function(card) {\n            if (typeof card === 'string') return; // uglify erors hack\n            return { \"background-image\": \"url(\" + this.getCardStatusIcon(this.getCardByStatus(card)) + \")\" };\n\n\n\n        }\n        this.getCardStatusIcon = function(card) {\n            return card.type === 'artist' ? 'assets/images/artist-icon@2x.png' :\n                'assets/images/album.png';\n            $scope.$$phase || $scope.$digest()\n        }\n\n\n        function toggleModal(type) {\n\n            self.modals[type] = !self.modals[type]\n        }\n\n        function comparePageCards(curr, last) {\n            return !!(\n                typeof curr !== 'undefined' &&\n                Array.isArray(curr))\n        }\n\n        function parseData(card, obj, type) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    // debugger;\n                    if (prop !== 'items') {\n                        card[type][prop] = obj[prop]\n                    } else {\n                        card[type][prop] = card[type][prop].concat(obj[prop])\n                    }\n                }\n            }\n            return card\n        }\n\n    }\n\n    angular.module('dashboard')\n        .controller('dashboardController', DashboardController);\n\n    angular.module('dashboard').filter('trustAsResourceUrl', trustAsResourceUrl);\n\n    trustAsResourceUrl.$inject = ['$sce']\n\n    function trustAsResourceUrl($sce) {\n        return function(val) {\n            return $sce.trustAsResourceUrl(val);\n        };\n    }\n})();","// delete-landing-page.directive.js\n\n(function() {\n    'use strict';\n    DeleteLandingPageAfterBootstrap.$inject = [];\n\n    function DeleteLandingPageAfterBootstrap() {\n        // Return the directive configuration.\n        return ({\n            link: link,\n            restrict: \"C\"\n        });\n\n        function link(scope, element, attrs) {\n\n            element.children().eq(1).fadeOut();\n            setTimeout(function() {\n                element.remove();\n            }, 200)\n        }\n    }\n\n    NgEnter.$inject = [];\n\n    function NgEnter() {\n        return function(scope, element, attrs) {\n\n            element.bind(\"keydown keypress\", function(event) {\n                if (event.which === 13) {\n                    scope.$apply(function() {\n                        scope.$eval(attrs.ngEnter, { 'event': event });\n                    });\n                    event.preventDefault();\n                }\n            });\n        };\n    };\n\n    MyNgInclude.$inject = [];\n\n    function MyNgInclude() {\n        return {\n            restrict: 'AE',\n            templateUrl: function(ele, attrs) {\n                // debugger;\n                return attrs.myNgInclude;\n            }\n        };\n    }\n\n    ResponsiveImageIsolated.$inject = ['store'];\n\n    function ResponsiveImageIsolated(store) {\n\n        return {\n            scope: { respImage: '=' },\n            restrict: 'AE',\n            link: function(scope, element, attrs) {\n\n                // scope.$watch(function(){\n\n                // },function (){\n\n                // })\n                var defaultImage = attrs.respImage || 'assets/images/2.jpg';\n                var url;\n                scope.$watch(function() {\n                        return scope.respImage.images\n                    },\n                    function(images, old) {\n\n                        url = select(images)\n\n                        if (element.css('background-image').replace(/^url\\([\"']?/, '').replace(/[\"']?\\)$/, '') !== url) {\n                            ChangeImage(url)\n                        }\n\n                    })\n                store.store.subscribe('viewport', function viewport(vp) {\n                    ChangeImage(select(scope.respImage.images))\n                });\n\n                function select(_images) {\n                    var band = store.getViewport().band;\n                    var images = _images && _images.length ? _images : [{ url: defaultImage }]\n\n                    var imageUrl = band === 'xs' || band === 'sm' ?\n                        2 in images ? images[2].url : 1 in images ? images[1].url : images[0].url :\n                        1 in images ? images[1].url : images[0].url;\n                    return imageUrl;\n                }\n\n                function ChangeImage(url) {\n\n                    // debugger;\n                    var _url = element.css('background-image').replace(/^url\\([\"']?/, '').replace(/[\"']?\\)$/, '');\n                    if (_url === url || _url.indexOf(url) !== -1) /* same url so*/ return;\n                    if (_url === 'none') {\n                        // image not present \n                        element\n                            .css({ 'background-image': 'url(' + defaultImage + ')' })\n                            .animate({ opacity: 1 });\n\n                        if (_url.indexOf(url) === -1) {\n                            load(element, url)\n                        }\n\n                    } else {\n                        // new image\n                        load(element, url)\n                    }\n\n                    function load(element, url) {\n                        if (['Ctrl.getCardByStatus(Ctrl.modals.selectedCard)', 'Ctrl.modals.selectedCard', 'album', 'Ctrl.getCardByStatus(card)'].indexOf(url) != -1) return; // uglify errors hack\n                        // new image\n                        // using this technique just to avoid latancy of image downloading\n                        var img = new Image();\n                        img.src = url;\n                        img.onload = function() {\n                            element.animate({ opacity: 0, height: 0 }, 'slow', function() {\n\n                                $(this)\n                                    .css({ 'background-image': 'url(' + url + ')' })\n                                    .animate({ opacity: 1, height: '100%' });\n                            });\n                        }\n                    }\n                }\n\n                url = select()\n                ChangeImage(url)\n            }\n\n        }\n    }\n\n\n    nanoScroller.$inject = ['$timeout'];\n\n    function nanoScroller($timeout) {\n        return {\n            link: function(scope, elem, attrs, ctrl) {\n                var tim = $timeout(function() {\n                    angular.element('.nano').nanoScroller({ preventPageScrolling: true })\n                }, 0);\n                scope.$on('$destroy', function() {\n                    $timeout.cancel(tim)\n                })\n            }\n        }\n    }\n\n    btnPress.$inject = ['$timeout']\n\n    function btnPress($timeout) {\n        return {\n            restrict: 'AE',\n            link: function(scope, element, attrs) {\n                var tim;\n                element.click(function() {\n                    tim = $timeout(function() {\n                        angular.element('body').trigger('click');\n                        $timeout.cancel(tim)\n                    }, 200)\n\n                })\n                scope.$on('$destroy', function() {\n                    element.off('click')\n                })\n            }\n        }\n    }\n    angular.module('dashboard')\n        .directive('postBootstrapDel', DeleteLandingPageAfterBootstrap)\n        .directive('ngEnter', NgEnter)\n        .directive('myNgInclude', MyNgInclude)\n        .directive('respImage', ResponsiveImageIsolated)\n        .directive('nanoScroller', nanoScroller)\n        .directive('btnPress', btnPress)\n\n\n\n})()","(function() {\n    'use strict';\n    Store.$inject = ['redux', 'spotify', '$timeout', '$window'];\n\n    function Store(redux, spotify, $timeout, $window) {\n        var combinedReducer, rootReducer, store, appInitialState;\n\n        /**\n         *  app actions here;\n         */\n        var actions = {\n            toggleLoadoing: function(payload) {\n                return {\n                    type: 'toggleLoading',\n                    payload: payload\n                }\n            },\n            addPageCards: function(payload) {\n                return {\n                    type: 'addPageCards',\n                    payload: payload\n                }\n            }\n\n        }\n\n\n        /**\n         * Thunk area\n         * thunk prop name must match some action.type to work \n         * action.type === 'foo' then \n         * thunk.foo = function(action,payload,store){ //use store.getState() and  store.dispatch(action2,payload)}\n         */\n\n        var thunk = {\n            getArtists: function(action, store) {\n                store.dispatch(actions.toggleLoadoing(true));\n\n                var spPayload = {\n                    searchText: action.payload\n                }\n                spotify.getArtists(spPayload)\n                    .then(function(data) {\n\n                        data.data.artists.searchText = action.payload;\n                        store.dispatch(actions.addPageCards(data.data.artists.items))\n                        store.dispatch({ type: 'artistsMetadata', payload: data.data }); // silent update no subscriber\n                        store.dispatch(actions.toggleLoadoing(false));\n                    }).catch(function(e) {\n                        // debugger;\n                        store.dispatch(actions.toggleLoadoing(false));\n                    })\n            },\n            getMoreArtists: function() {\n                store.dispatch(actions.toggleLoadoing(true));\n                spotify.getArtists({ url: store.getState().cardsMetadata.next })\n                    .then(function(data) {\n                        data.data.artists.searchText = store.getState().cardsMetadata.searchText;\n                        store.dispatch({ type: 'addMorePageCards', payload: data.data.artists.items })\n                        store.dispatch({ type: 'artistsMetadata', payload: data.data }); // silent update no subscriber\n                        store.dispatch(actions.toggleLoadoing(false));\n                    })\n                    .catch(function(e) {\n                        // debugger;\n                        store.dispatch(actions.toggleLoadoing(false));\n                    })\n            }\n\n        }\n\n        /**\n         * \n         * Reducers Area\n         * // state and action mutation is preserved in redux so need not do it twice\n         */\n        pageCardsReducer._name = 'pageCardsReducer' // uglify hack\n        function pageCardsReducer(state, action) {\n\n            if (action.type === 'addPageCards') {\n                action.payload.forEach(function(card) {\n                    card.status = \"artist\";\n                })\n                return action.payload;\n            }\n            if (action.type === 'addMorePageCards') {\n                action.payload.forEach(function(card) {\n                    card.status = \"artist\";\n                })\n                return state.concat(action.payload)\n            }\n            if (action.type === 'addAlbumsMetadataInCard') {\n\n                state.forEach(function(card) {\n                    if (card.id === action.payload.cardId) {\n                        card.albumsMetadata = action.payload.albums.items;\n\n                    }\n                })\n                return state;\n            }\n\n            if (action.type === 'updateAlbum') {\n                state.map(function(card) {\n                    if (card.id === action.payload.cardId) {\n\n                        card = action.payload;\n                    }\n                })\n            }\n            return state;\n        }\n\n        cardsMetadataReducer._name = 'cardsMetadataReducer';\n\n        function cardsMetadataReducer(state, action) {\n            if (action.type === 'artistsMetadata') {\n                delete action.payload.artists.items;\n\n                return action.payload.artists;\n            }\n            return state;\n        }\n\n        loadingReducer._name = 'loadingReducer';\n\n        function loadingReducer(state, action) {\n            if (action.type === 'toggleLoading') {\n                return action.payload\n            }\n            return state;\n        }\n\n        viewportReducer._name = 'viewportReducer';\n\n        function viewportReducer(state, action) {\n            if (action.type === 'viewport') {\n                return action.payload;\n            }\n            return state;\n        }\n\n\n        /**\n         *   register thunk in store; \n         */\n\n        redux.registerThunk(thunk);\n\n\n        /**\n         * App initial State and Reducer intigration\n         */\n        appInitialState = {\n            pageCards: [],\n            loading: false,\n            cardsMetadata: {}\n        }\n\n        var local = JSON.parse(localStorage.getItem('state'));\n        // debugger;\n        if (local) {\n            appInitialState = local;\n        }\n\n        // create combined reducer\n        combinedReducer = {\n            pageCards: pageCardsReducer,\n            loading: loadingReducer,\n            viewport: viewportReducer,\n            cardsMetadata: cardsMetadataReducer,\n\n        }\n        rootReducer = redux.combineReducer(combinedReducer);\n\n        /**\n         * Store creation\n         */\n        store = redux.createStore(rootReducer, appInitialState);\n\n\n\n        // breakPoint change\n        // $(window).trigger('resize'); for force redraw\n\n        function getViewport() {\n            var w = $window.innerWidth\n            var payload = {\n                    w: w,\n                    h: $window.innerHeight,\n                    d_bp: '',\n                    m_bp: '',\n                    band: ''\n                }\n                //desktop first approach\n            if (w < 767) {\n                payload.d_bp = 'max-width:767';\n            } else if (w < 991) {\n                payload.d_bp = 'max-width:991';\n            } else if (w < 1199) {\n                payload.d_bp = 'max-width:1199';\n            }\n            // mobile first approach\n            if (w >= 576) {\n                payload.m_bp = 'min-width:576';\n            }\n            if (w >= 768) {\n                payload.m_bp = 'min-width:768';\n            }\n            if (w >= 992) {\n                payload.m_bp = 'min-width:992';\n            }\n            if (w >= 1200) {\n                payload.m_bp = 'min-width:1200';\n            }\n            // range band\n\n            if (0 <= w && w < 576) {\n                payload.band = 'xs';\n            }\n            if (576 <= w && w < 768) {\n                payload.band = 'sm';\n            }\n            if (768 <= w && w < 992) {\n                payload.band = 'md';\n            }\n            if (992 <= w) {\n                payload.band = 'lg';\n            }\n            return payload;\n        }\n        var wait;\n        $(window).on('resize', function() {\n\n            if (wait) return;\n            wait = $timeout(function() {\n                store.dispatch({ type: 'viewport', payload: getViewport() });\n                $timeout.cancel(wait);\n                wait = null;\n            }, 200)\n\n        });\n\n        // service return here\n        return {\n            store: store,\n            actions: actions,\n            getViewport: getViewport\n\n\n        }\n    };\n\n    function mutate(state, data) {\n        if (Array.isArray(data)) return state = state.concat(data);\n        if (typeof data === 'object') return state = object.asign(state, data);\n        if (typeof data === 'string' || typeof data === 'boolean' || typeof data === 'number') return state = data;\n    }\n\n    angular.module('dashboard').factory('store', Store);\n})();","(function() {\n    'use strict';\n    Spotify.$inject = ['$q', '$http', '$window'];\n\n    function Spotify(q, $http, $window) {\n\n        var baseUrl = \"https://api.spotify.com\";\n\n        function getArtists(data) {\n            if (data.url) return $http.get(data.url)\n            var q = baseUrl + '/v1/search';\n            var p = {\n                params: {\n                    type: 'artist',\n                    q: encodeURI(data.searchText.trim()),\n                    limit: 10\n                }\n            }\n\n            return $http.get(q, p)\n        };\n\n        function getAlbums(card, url) {\n            if (url) return $http({\n                method: \"GET\",\n                url: url\n            })\n            var q = baseUrl + '/v1/artists/' + card.id + '/albums';\n            var p = {\n                params: {\n                    limit: 10\n                }\n            }\n            return $http.get(q, p)\n        }\n\n        function getTracks(album, url) {\n            if (url) return $http({\n                method: \"GET\",\n                url: url\n            })\n            var q = baseUrl + '/v1/albums/' + album.id + '/tracks';\n            var p = {\n                params: {\n                    limit: 10\n                }\n            }\n            return $http.get(q, p)\n        }\n        return {\n            getArtists: getArtists,\n            getAlbums: getAlbums,\n            getTracks: getTracks\n\n        }\n    }\n    angular.module('dashboard').factory('spotify', Spotify);\n})()"]}